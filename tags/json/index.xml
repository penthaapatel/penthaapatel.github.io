<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>json on Penthaa Patel</title>
    <link>https://penthaapatel.github.io/tags/json/</link>
    <description>Recent content in json on Penthaa Patel</description>
    <image>
      <url>https://penthaapatel.github.io/papermod-cover.png</url>
      <link>https://penthaapatel.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 22 May 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://penthaapatel.github.io/tags/json/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang-How to parse JSON data into a nested struct</title>
      <link>https://penthaapatel.github.io/posts/golang-how-to-parse-json-data-into-a-nested-struct/</link>
      <pubDate>Wed, 22 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://penthaapatel.github.io/posts/golang-how-to-parse-json-data-into-a-nested-struct/</guid>
      <description>This post was originally published on my Medium profile : Golang-How to parse JSON data into a nested struct
Say you are fetching data from a RESTful API using GET requests and want to store the JSON responses. One of the ways to achieve this is by parsing the JSON data into a Go struct. The following example will fetch data related to standings of a football league, UEFA Champions League in this case.</description>
    </item>
    
  </channel>
</rss>
