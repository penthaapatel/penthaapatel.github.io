<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Penthaa Patel</title>
    <link>https://penthaapatel.github.io/</link>
    <description>Recent content on Penthaa Patel</description>
    <image>
      <url>https://penthaapatel.github.io/papermod-cover.png</url>
      <link>https://penthaapatel.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 25 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://penthaapatel.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A concise guide to gRPC services for beginners</title>
      <link>https://penthaapatel.github.io/posts/a-concise-guide-to-grpc-services-for-beginners/</link>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://penthaapatel.github.io/posts/a-concise-guide-to-grpc-services-for-beginners/</guid>
      <description>This post was originally published on my Medium profile : A concise guide to gRPC for beginners
 A series of simple, beginner friendly tutorials that explain the what, why and how of gRPC.
 Getting started - Understanding RPC What is RPC?  RPC aka Remote Procedure Calls - are just like functions. These functions are executed on some remote system and hence the name. It follows a request - response model.</description>
    </item>
    
    <item>
      <title>How to implement a simple RPC service using Golang</title>
      <link>https://penthaapatel.github.io/posts/how-to-implement-a-simple-rpc-service-using-golang/</link>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://penthaapatel.github.io/posts/how-to-implement-a-simple-rpc-service-using-golang/</guid>
      <description>This post was originally published on my Medium profile : How to implement a simple gRPC service using Golang
If you want a general introduction to RPC you might want to check out my previous article in this series - A concise guide to gRPC for beginners
The implemented code can be found on my GitHub Repository : Link to GitHub repository
Before you begin  Install Golang Install proto compilers  Workflow  Define protocol - Write .</description>
    </item>
    
    <item>
      <title>Difference between functions and methods in Golang</title>
      <link>https://penthaapatel.github.io/posts/difference-between-functions-and-methods-in-golang/</link>
      <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://penthaapatel.github.io/posts/difference-between-functions-and-methods-in-golang/</guid>
      <description>This post was originally published on my Medium profile : Difference between functions and methods in Golang
The words function and method are used almost interchangeably, but there are subtle differences in their implementation and usage when used in Golang. Let&amp;rsquo;s see what the difference is and how its used.
Function Functions accept a set of input parameters, perform some operations on the input and produce an output with a specific return type.</description>
    </item>
    
    <item>
      <title>Contributing to Open Source Go projects on GitHub - A recipe to clone forked Go repositories</title>
      <link>https://penthaapatel.github.io/posts/contributing-to-open-source-go-projects-on-github-a-recipe-to-clone-forked-go-repositories/</link>
      <pubDate>Sat, 08 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://penthaapatel.github.io/posts/contributing-to-open-source-go-projects-on-github-a-recipe-to-clone-forked-go-repositories/</guid>
      <description>This post was originally published on my Dev.to profile : Contributing to Open Source Go projects on GitHub â€” A recipe to clone forked Go repos.
Phew! It took me a while to figure out the entire process so I decided to write this post and I hope it&amp;rsquo;ll further help everyone else get started. I managed to gather all the ingredients and curate the recipe to start working on an open source Golang projectâ€¦so follow along.</description>
    </item>
    
    <item>
      <title>Golang-How to parse JSON data into a nested struct</title>
      <link>https://penthaapatel.github.io/posts/golang-how-to-parse-json-data-into-a-nested-struct/</link>
      <pubDate>Wed, 22 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://penthaapatel.github.io/posts/golang-how-to-parse-json-data-into-a-nested-struct/</guid>
      <description>This post was originally published on my Medium profile : Golang-How to parse JSON data into a nested struct
Say you are fetching data from a RESTful API using GET requests and want to store the JSON responses. One of the ways to achieve this is by parsing the JSON data into a Go struct. The following example will fetch data related to standings of a football league, UEFA Champions League in this case.</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://penthaapatel.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://penthaapatel.github.io/about/</guid>
      <description>Hi there! ðŸ‘‹
I&amp;rsquo;m an aspiring software developer from India ðŸ‡®ðŸ‡³ and I recently graduated from IIIT Bh with a Bachelor&amp;rsquo;s in Computer Science and Engineering.
I code mostly using Go. My interests include playing around with Go code that implement modern day Microservices using RPC protocol. I also have a fair knowledge on implementation of REST APIs. I have developed individual projects on these topics which can be found on my GitHub profile.</description>
    </item>
    
    
    <item>
      <title>Projects</title>
      <link>https://penthaapatel.github.io/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://penthaapatel.github.io/projects/</guid>
      <description>grpcblog Implementation of a gRPC service using Go. It uses protocol buffers to serialize data, which is a more efficient means of transporting data over the network as compared to text based serializations.
Project link : github.com/penthaapatel/grpcblog
goodfoodsAPI A HTTP RESTful API written in Go accessing MongoDB Database using MongoDB Go Driver. The API supports CRUD - Create, Read, Update, Delete operations using the API endpoints.
Project link : github.com/penthaapatel/goodfoodsAPI</description>
    </item>
    
    
  </channel>
</rss>
